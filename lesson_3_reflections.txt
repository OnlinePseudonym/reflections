Q. When would you want to create a remote repository rather than keeping all
your work local?

A. Anytime you're working collaboratively or want to share your code with the
public.

Q. Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

A. I'm not certian, I suppose you could acheive the same thing by creating a new
branch and working on that exclusively while git constantly updated your remote
repository.

Q. Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A. A fork is a copy that is credited to the orginal but not directly linked, you
would use this when you want to work on your own version of a repository. A
clone is an exact copy of the original repository you can clone a copy from your
online repository to a local one and vice versa. And a branch is a path from the
orginal master of the original code that you could use to work one specific bug
fixes and feature adds and easily merge with the master.

Q. What is the benefit of having a copy of the last known state of the remote
stored locally?

A. being able to check your work against the last known stable state seems
advantageous

Q. How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

A. I suppose group emailing code could work but it wouldn't be as efficient. The
barrier for entry might be lower but I'd imagine after a while using git and
github becomes like second nature so it makes little sense not to use it.

Q. When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

A. You want to make changes in a seperate branch when you aren't sure the
outcome of the changes will be benificial to the master, like in adding new
features and trying to debug specific bugs.
