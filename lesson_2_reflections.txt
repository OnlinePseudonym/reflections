Q. What happens when you initialize a repository? Why do you need to do it?

A. It creates a hidden directory that contains my git data, you need to
initialize before you can commit your repository

Q. How can you use the staging area to make sure you have one commit per
logical change?

A. Use git diff to compare the staging area to the working directory before you
commit.

Q. What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

A. When adding a new feature and you aren't sure how it will react with the
code it's a good idea to start a new branch for that feature. If you have a beta
version it'd be wise to branch and leave your release version untouched so you
can continue to provide support for it.

Q. How do the diagrams help you visualize the branch structure?

A. I can see how seperated and connected each branch is from one another and
whether or not a change on a particular branch will effect another branch.

Q. What is the result of merging two branches together? Why do we represent it i
n the diagram the way we do?

A. Merging two branches does as it says, it merges two branches together.

Q. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

A. It is sometimes tedious going through the code to find out why the conflicts
exist but it is a step in assuring that the code is bug free after the merge.
